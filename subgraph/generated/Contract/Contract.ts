// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ZkMystics__CheckStatusRequestCreated extends ethereum.Event {
  get params(): ZkMystics__CheckStatusRequestCreated__Params {
    return new ZkMystics__CheckStatusRequestCreated__Params(this);
  }
}

export class ZkMystics__CheckStatusRequestCreated__Params {
  _event: ZkMystics__CheckStatusRequestCreated;

  constructor(event: ZkMystics__CheckStatusRequestCreated) {
    this._event = event;
  }

  get userAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get assetAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get destinationNetwork(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ZkMystics__StatusChecked extends ethereum.Event {
  get params(): ZkMystics__StatusChecked__Params {
    return new ZkMystics__StatusChecked__Params(this);
  }
}

export class ZkMystics__StatusChecked__Params {
  _event: ZkMystics__StatusChecked;

  constructor(event: ZkMystics__StatusChecked) {
    this._event = event;
  }

  get userAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get assetAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get assetType(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get result(): boolean {
    return this._event.parameters[3].value.toBoolean();
  }
}

export class Contract extends ethereum.SmartContract {
  static bind(address: Address): Contract {
    return new Contract("Contract", address);
  }

  getRouter(): Address {
    let result = super.call("getRouter", "getRouter():(address)", []);

    return result[0].toAddress();
  }

  try_getRouter(): ethereum.CallResult<Address> {
    let result = super.tryCall("getRouter", "getRouter():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  i_polygonZkEVMBridge(): Address {
    let result = super.call(
      "i_polygonZkEVMBridge",
      "i_polygonZkEVMBridge():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_i_polygonZkEVMBridge(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "i_polygonZkEVMBridge",
      "i_polygonZkEVMBridge():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  i_zkMysticsSenderAddress(): Address {
    let result = super.call(
      "i_zkMysticsSenderAddress",
      "i_zkMysticsSenderAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_i_zkMysticsSenderAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "i_zkMysticsSenderAddress",
      "i_zkMysticsSenderAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _polygonZkEVMBridge(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _zkMysticsSenderAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _router(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CcipReceiveCall extends ethereum.Call {
  get inputs(): CcipReceiveCall__Inputs {
    return new CcipReceiveCall__Inputs(this);
  }

  get outputs(): CcipReceiveCall__Outputs {
    return new CcipReceiveCall__Outputs(this);
  }
}

export class CcipReceiveCall__Inputs {
  _call: CcipReceiveCall;

  constructor(call: CcipReceiveCall) {
    this._call = call;
  }

  get message(): CcipReceiveCallMessageStruct {
    return changetype<CcipReceiveCallMessageStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class CcipReceiveCall__Outputs {
  _call: CcipReceiveCall;

  constructor(call: CcipReceiveCall) {
    this._call = call;
  }
}

export class CcipReceiveCallMessageStruct extends ethereum.Tuple {
  get messageId(): Bytes {
    return this[0].toBytes();
  }

  get sourceChainSelector(): BigInt {
    return this[1].toBigInt();
  }

  get sender(): Bytes {
    return this[2].toBytes();
  }

  get data(): Bytes {
    return this[3].toBytes();
  }

  get destTokenAmounts(): Array<CcipReceiveCallMessageDestTokenAmountsStruct> {
    return this[4].toTupleArray<CcipReceiveCallMessageDestTokenAmountsStruct>();
  }
}

export class CcipReceiveCallMessageDestTokenAmountsStruct extends ethereum.Tuple {
  get token(): Address {
    return this[0].toAddress();
  }

  get amount(): BigInt {
    return this[1].toBigInt();
  }
}

export class OnMessageReceivedCall extends ethereum.Call {
  get inputs(): OnMessageReceivedCall__Inputs {
    return new OnMessageReceivedCall__Inputs(this);
  }

  get outputs(): OnMessageReceivedCall__Outputs {
    return new OnMessageReceivedCall__Outputs(this);
  }
}

export class OnMessageReceivedCall__Inputs {
  _call: OnMessageReceivedCall;

  constructor(call: OnMessageReceivedCall) {
    this._call = call;
  }

  get originAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get originNetwork(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class OnMessageReceivedCall__Outputs {
  _call: OnMessageReceivedCall;

  constructor(call: OnMessageReceivedCall) {
    this._call = call;
  }
}
